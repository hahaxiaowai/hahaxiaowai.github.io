import{_ as i,o as a,c as n,a8 as l}from"./chunks/framework.BDRxOqQP.js";const E=JSON.parse('{"title":"The Book of Shaders | 开始","description":"","frontmatter":{"title":"The Book of Shaders | 开始","date":"2021-10-20","categories":["webgl","读书笔记"],"tags":["shader"]},"headers":[],"relativePath":"blogs/GIS/webgl/The Book of Shaders1.md","filePath":"blogs/GIS/webgl/The Book of Shaders1.md","lastUpdated":1731928712000}'),h={name:"blogs/GIS/webgl/The Book of Shaders1.md"};function e(t,s,p,k,r,o){return a(),n("div",null,s[0]||(s[0]=[l(`<h1 id="the-book-of-shaders-开始" tabindex="-1">The Book of Shaders | 开始 <a class="header-anchor" href="#the-book-of-shaders-开始" aria-label="Permalink to &quot;The Book of Shaders | 开始&quot;">​</a></h1><h2 id="记" tabindex="-1">记 <a class="header-anchor" href="#记" aria-label="Permalink to &quot;记&quot;">​</a></h2><p>《The Book of Shaders》 by Patricio Gonzalez Vivo &amp; Jen Lowe 随书笔记</p><h2 id="hello-world" tabindex="-1">Hello World <a class="header-anchor" href="#hello-world" aria-label="Permalink to &quot;Hello World&quot;">​</a></h2><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">#ifdef </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">GL_ES</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">precision mediump float;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">#endif</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> main</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(){</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  gl_FragColor</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">vec4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.342</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><ol><li>#ifdef #endif 预处理的宏命令。</li></ol><h2 id="uniform" tabindex="-1">uniform <a class="header-anchor" href="#uniform" aria-label="Permalink to &quot;uniform&quot;">​</a></h2><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">#ifdef </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">GL_ES</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">precision mediump float;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">#endif</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">uniform vec2 u_resolution; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 画布尺寸（宽，高）</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">uniform vec2 u_mouse;      </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 鼠标位置（在屏幕上哪个像素）</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">uniform float u_time;     </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 时间（加载后的秒数）</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> main</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	gl_FragColor </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> vec4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">abs</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(u_time)),</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><ol><li>gpu进程之间无法传值，但可以通过cpu进行输入，uniform是它们的桥梁</li><li>业内大多以 u_ 开头定义uniform变量，也有一些会有自己的开头定义</li></ol>`,9)]))}const g=i(h,[["render",e]]);export{E as __pageData,g as default};
