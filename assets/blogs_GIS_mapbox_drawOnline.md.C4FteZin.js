import{_ as s,o as i,c as l,a8 as t}from"./chunks/framework.BDRxOqQP.js";const g=JSON.parse('{"title":"nebula.gl与mapbox-gl-draw 地图在线绘制的两种方案","description":"","frontmatter":{"title":"nebula.gl与mapbox-gl-draw 地图在线绘制的两种方案","date":"2020-12-08","categories":["GIS"],"tags":["mapbox"],"publish":false},"headers":[],"relativePath":"blogs/GIS/mapbox/drawOnline.md","filePath":"blogs/GIS/mapbox/drawOnline.md","lastUpdated":1731936868000}'),p={name:"blogs/GIS/mapbox/drawOnline.md"};function e(n,a,h,r,o,k){return i(),l("div",null,a[0]||(a[0]=[t(`<h1 id="nebula-gl与mapbox-gl-draw-地图在线绘制的两种方案" tabindex="-1">nebula.gl与mapbox-gl-draw 地图在线绘制的两种方案 <a class="header-anchor" href="#nebula-gl与mapbox-gl-draw-地图在线绘制的两种方案" aria-label="Permalink to &quot;nebula.gl与mapbox-gl-draw 地图在线绘制的两种方案&quot;">​</a></h1><h2 id="简述" tabindex="-1">简述 <a class="header-anchor" href="#简述" aria-label="Permalink to &quot;简述&quot;">​</a></h2><p>在很多场景下，我们需要在地图上进行临时的绘制和对已有的矢量数据（点线面）编辑，在绘制结束后，可以选择保存或导出。 在arcmap和qgis等桌面软件上，矢量绘制与编辑是作为最基本的功能，而在前端项目中实现绘制，则是看当前GIS库是否有了，如果你使用的是arcgis for js ,可以使用<a href="https://developers.arcgis.com/web-appbuilder/" target="_blank" rel="noreferrer">arcgis appBuilder</a>所提供的控件快速实现绘制功能。 <a href="http://geojson.io/#map=2/20.0/0.0" target="_blank" rel="noreferrer">geosjon.io</a>是由mapbox团队提供的在线绘制geojson的网址，在这个网址上，你可以看到它拥有一套绘制组件，它实现的基础是mapbox一个开源库<a href="https://github.com/mapbox/mapbox-gl-draw" target="_blank" rel="noreferrer">mapbox-gl-draw</a>。</p><h2 id="mapbox-gl-draw-使用-模块" tabindex="-1">mapbox-gl-draw 使用(模块) <a class="header-anchor" href="#mapbox-gl-draw-使用-模块" aria-label="Permalink to &quot;mapbox-gl-draw 使用(模块)&quot;">​</a></h2><p>安装,当然也需要安装mapbox-gl</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> @mapbox/mapbox-gl-draw</span></span></code></pre></div><p>引入</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> mapboxgl </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;mapbox-gl&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> MapboxDraw </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;@mapbox/mapbox-gl-draw&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;@mapbox/mapbox-gl-draw/dist/mapbox-gl-draw.css&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div><p>初始化，初始化前先初始化地图容器</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// drawConfig 为初始化绘图工具的配置</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.Draw </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> MapboxDraw</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(drawConfig);</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.map.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">addControl</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.Draw, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;top-right&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><p>这样便完成了绘制工具的初始化，如果你需要对数据进行其他操作，可以参考它的API进行详细操作，这个库是目前使用较多的，默认情况下，他只有几种基础绘制模式，不过很多开发者写了更多的绘制模式，并收到官网的采纳，我们只需要将其引入，便可使用。</p>`,11)]))}const b=s(p,[["render",e]]);export{g as __pageData,b as default};
