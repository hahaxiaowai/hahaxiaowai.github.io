import{_ as i,c as s,a6 as t,o as e}from"./chunks/framework.B6dxnelD.js";const g=JSON.parse('{"title":"WebGL 常见报错","description":"","frontmatter":{"title":"WebGL 常见报错","date":"2021-9-17","categories":["webgl"],"tags":["基础"],"timeline":false},"headers":[],"relativePath":"blogs/GIS/webgl/normalError.md","filePath":"blogs/GIS/webgl/normalError.md","lastUpdated":1729653278000}'),n={name:"blogs/GIS/webgl/normalError.md"};function l(r,a,o,h,p,k){return e(),s("div",null,a[0]||(a[0]=[t(`<h1 id="webgl-常见报错" tabindex="-1">WebGL 常见报错 <a class="header-anchor" href="#webgl-常见报错" aria-label="Permalink to &quot;WebGL 常见报错&quot;">​</a></h1><div class="tip custom-block"><p class="custom-block-title">提示</p><h2 id="简述" tabindex="-1">简述 <a class="header-anchor" href="#简述" aria-label="Permalink to &quot;简述&quot;">​</a></h2><p>在WegGL开发中，调试glsl遇到很多报错，需要我们熟知，为方便记忆，做此记录。</p></div><h2 id="常见报错" tabindex="-1">常见报错 <a class="header-anchor" href="#常见报错" aria-label="Permalink to &quot;常见报错&quot;">​</a></h2><h3 id="redefinition" tabindex="-1">redefinition <a class="header-anchor" href="#redefinition" aria-label="Permalink to &quot;redefinition&quot;">​</a></h3><p>重新定义，同一变量名使用了两次。</p><p>点积一个单位向量，那么得到的是向量投影在单位向量上的分量</p><h3 id="failed-to-get-the-storage-uniform-location" tabindex="-1">Failed to get the storage uniform location! <a class="header-anchor" href="#failed-to-get-the-storage-uniform-location" aria-label="Permalink to &quot;Failed to get the storage uniform location!&quot;">​</a></h3><p>uniform获取失败,自定义的报错信息，出现这种情况有可能是在初始化initShader时未被是定义，有时候在着色器中，未被使用，他就不会被定义</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> u_Translation </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> gl.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getUniformLocation</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(gl.program, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;u_Translation&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">u_Translation) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">error</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Failed to get the storage uniform location!&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span></code></pre></div>`,9)]))}const E=i(n,[["render",l]]);export{g as __pageData,E as default};
