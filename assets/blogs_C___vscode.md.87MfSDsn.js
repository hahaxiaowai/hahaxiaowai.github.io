import{_ as a,c as s,o as e,a8 as i}from"./chunks/framework.CfV4vhYM.js";const u=JSON.parse('{"title":"vscode配置c++/UE","description":"","frontmatter":{"title":"vscode配置c++/UE","date":"2023-3-4","categories":["c++"],"tags":["vscode"],"publish":false},"headers":[],"relativePath":"blogs/C++/vscode.md","filePath":"blogs/C++/vscode.md","lastUpdated":1721930431000}'),o={name:"blogs/C++/vscode.md"},t=i(`<h1 id="vscode配置c-ue" tabindex="-1">vscode配置c++/UE <a class="header-anchor" href="#vscode配置c-ue" aria-label="Permalink to &quot;vscode配置c++/UE&quot;">​</a></h1><h2 id="简述" tabindex="-1">简述 <a class="header-anchor" href="#简述" aria-label="Permalink to &quot;简述&quot;">​</a></h2><p>对于用习惯vscode的我来说，使用vs十分笨拙，为了提高自己的开发效率，遂决定vscode配置C++的开发环境 初次接触C++，很多问题都不清楚，做此积累</p><h2 id="配置mingw" tabindex="-1">配置MinGW <a class="header-anchor" href="#配置mingw" aria-label="Permalink to &quot;配置MinGW&quot;">​</a></h2><p>必须安装此环境，否则无法编译,以下为<a href="https://code.visualstudio.com/docs/languages/cpp" target="_blank" rel="noreferrer">官网</a>推荐方式</p><h3 id="msys2" tabindex="-1"><a href="https://www.msys2.org/" target="_blank" rel="noreferrer">MSYS2</a> <a class="header-anchor" href="#msys2" aria-label="Permalink to &quot;[MSYS2](https://www.msys2.org/)&quot;">​</a></h3><p>下载后，更改安装目录，然后等待安装即可，过程较慢安装 <img src="https://hhxy-blog.oss-cn-zhangjiakou.aliyuncs.com/docs/web/c_vscode_01.png" alt="图片1"></p><h3 id="安装mingw" tabindex="-1">安装MinGW <a class="header-anchor" href="#安装mingw" aria-label="Permalink to &quot;安装MinGW&quot;">​</a></h3><p>运行MSYS2终端，输入命令：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> pacman</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -S</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mingw-w64-ucrt-x86_64-gcc</span></span></code></pre></div><p>等待片刻，会打印出安装列表，询问你是否安装，输入y即可。</p><p>安装完成后输入命令：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">gcc</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --version</span></span></code></pre></div><p>如果出现版本号，说明安装成功 <img src="https://hhxy-blog.oss-cn-zhangjiakou.aliyuncs.com/docs/web/c_vscode_02.png" alt="图片2"></p><h3 id="gdb" tabindex="-1">gdb <a class="header-anchor" href="#gdb" aria-label="Permalink to &quot;gdb&quot;">​</a></h3><p>执行以下命令安装gdb，流程与上面一致</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pacman</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -S</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --needed</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> base-devel</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mingw-w64-x86_64-toolchain</span></span></code></pre></div><h3 id="设置环境变量" tabindex="-1">设置环境变量 <a class="header-anchor" href="#设置环境变量" aria-label="Permalink to &quot;设置环境变量&quot;">​</a></h3><p>windows搜索环境变量，在高级中点击环境变量，选中path，点击编辑，添加以下路径</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 如果你没有更改安装目录，就是下面的路径，如果改了则按照你的路径填写</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">C:\\msys64\\mingw64\\bin</span></span></code></pre></div><p>需要注意的是，官方只说添加环境变量到用户变量，保险起见我在系统变量中也添加了，随后重启电脑，cmd中输入</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">gcc</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --version</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">g++</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --version</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">gdb</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --version</span></span></code></pre></div><p>如果出现版本号，说明配置成功</p><h2 id="配置vscode" tabindex="-1">配置vscode <a class="header-anchor" href="#配置vscode" aria-label="Permalink to &quot;配置vscode&quot;">​</a></h2><h3 id="安装插件" tabindex="-1">安装插件 <a class="header-anchor" href="#安装插件" aria-label="Permalink to &quot;安装插件&quot;">​</a></h3><p>打开vscode，搜索C/C++，安装插件 <img src="https://hhxy-blog.oss-cn-zhangjiakou.aliyuncs.com/docs/web/c_vscode_03.png" alt="图片3"></p><h3 id="配置" tabindex="-1">配置 <a class="header-anchor" href="#配置" aria-label="Permalink to &quot;配置&quot;">​</a></h3><p>打开vscode，按下快捷键<code>ctrl+shift+p</code>，输入<code>C/C++:Edit Configurations (UI)</code>，打开配置文件 <img src="https://hhxy-blog.oss-cn-zhangjiakou.aliyuncs.com/docs/web/c_vscode_04.png" alt="图片4"> 点击<code>Add Configuration</code>，选择<code>gcc</code>，然后点击<code>Add Configuration</code>，会自动添加配置文件 <img src="https://hhxy-blog.oss-cn-zhangjiakou.aliyuncs.com/docs/web/c_vscode_05.png" alt="图片5"></p><h3 id="配置编译器" tabindex="-1">配置编译器 <a class="header-anchor" href="#配置编译器" aria-label="Permalink to &quot;配置编译器&quot;">​</a></h3><p>在<code>C_Cpp.default.compilerPath</code>中填写编译器路径，我的是<code>C:\\msys64\\mingw64\\bin\\gcc.exe</code><img src="https://hhxy-blog.oss-cn-zhangjiakou.aliyuncs.com/docs/web/c_vscode_06.png" alt="图片6"></p><h3 id="配置调试器" tabindex="-1">配置调试器 <a class="header-anchor" href="#配置调试器" aria-label="Permalink to &quot;配置调试器&quot;">​</a></h3><p>在<code>C_Cpp.default.configurationProvider</code>中填写调试器路径，我的是<code>C:\\msys64\\mingw64\\bin\\gdb.exe</code><img src="https://hhxy-blog.oss-cn-zhangjiakou.aliyuncs.com/docs/web/c_vscode_07.png" alt="图片7"></p><h3 id="配置编译选项" tabindex="-1">配置编译选项 <a class="header-anchor" href="#配置编译选项" aria-label="Permalink to &quot;配置编译选项&quot;">​</a></h3><p>在<code>C_Cpp.default.cStandard</code>中填写编译选项，我的是<code>c17</code><img src="https://hhxy-blog.oss-cn-zhangjiakou.aliyuncs.com/docs/web/c_vscode_08.png" alt="图片8"></p><h3 id="配置调试选项" tabindex="-1">配置调试选项 <a class="header-anchor" href="#配置调试选项" aria-label="Permalink to &quot;配置调试选项&quot;">​</a></h3><p>在<code>C_Cpp.default.cppStandard</code>中填写调试选项，我的是<code>c++17</code><img src="https://hhxy-blog.oss-cn-zhangjiakou.aliyuncs.com/docs/web/c_vscode_09.png" alt="图片9"></p><h3 id="配置头文件" tabindex="-1">配置头文件 <a class="header-anchor" href="#配置头文件" aria-label="Permalink to &quot;配置头文件&quot;">​</a></h3><p>在<code>C_Cpp.default.includePath</code>中填写头文件路径，我的是<code>C:\\msys64\\mingw64\\include</code><img src="https://hhxy-blog.oss-cn-zhangjiakou.aliyuncs.com/docs/web/c_vscode_10.png" alt="图片10"></p><h3 id="配置库文件" tabindex="-1">配置库文件 <a class="header-anchor" href="#配置库文件" aria-label="Permalink to &quot;配置库文件&quot;">​</a></h3><p>在<code>C_Cpp.default.intelliSenseMode</code>中填写库文件路径，我的是<code>C:\\msys64\\mingw64\\lib</code></p>`,40),c=[t];function n(h,d,l,p,r,g){return e(),s("div",null,c)}const k=a(o,[["render",n]]);export{u as __pageData,k as default};
