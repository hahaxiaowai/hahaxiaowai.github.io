import{_ as h,D as e,c as k,I as a,w as i,a as s,a8 as n,j as t,o}from"./chunks/framework.BBf2rj5V.js";const C=JSON.parse('{"title":"mapbox-gl | 1.1 入门","description":"","frontmatter":{"title":"mapbox-gl | 1.1 入门","date":"2021-08-28","categories":["GIS"],"tags":["教程","mapbox"]},"headers":[],"relativePath":"blogs/GIS/mapbox/mapbox1-1.md","filePath":"blogs/GIS/mapbox/mapbox1-1.md","lastUpdated":1723221360000}'),r={name:"blogs/GIS/mapbox/mapbox1-1.md"},d=n("",10),c=t("br",null,null,-1),E=n("",17);function g(b,m,y,u,x,F){const l=e("font"),p=e("center");return o(),k("div",null,[d,a(p,null,{default:i(()=>[t("kbd",null,[a(l,{color:"$specialFontColor"},{default:i(()=>[s("数据源（Source）")]),_:1})]),s("--->"),t("kbd",null,[a(l,{color:"$specialFontColor"},{default:i(()=>[s("图层（Layer)")]),_:1})]),s("--->"),t("kbd",null,[a(l,{color:"$specialFontColor"},{default:i(()=>[s("地图（Map)")]),_:1})])]),_:1}),c,s(" 在实际去写代码前，还需了解地图加载逻辑，这里所说的逻辑指的是代码书写逻辑，而非真正的渲染逻辑。简单来讲，假如你手里有一些拥有全国污染情况的数据，你将这些数据托管在数据源（Source）中，以不同类型的污染源分成多个图层（Layer），设置图层的样式，最后加载至地图（Map)上便完成了数据的展示。 "),E])}const v=h(r,[["render",g]]);export{C as __pageData,v as default};
