(window.webpackJsonp=window.webpackJsonp||[]).push([[40],{612:function(a,s,t){"use strict";t.r(s);var e=t(5),n=Object(e.a)({},(function(){var a=this,s=a.$createElement,t=a._self._c||s;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h2",{attrs:{id:"简述"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#简述"}},[a._v("#")]),a._v(" 简述")]),a._v(" "),t("p",[a._v("记录个人常用的库的命令行")]),a._v(" "),t("h2",{attrs:{id:"npm-check-updates-ncu"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#npm-check-updates-ncu"}},[a._v("#")]),a._v(" npm-check-updates(ncu)")]),a._v(" "),t("p",[a._v("检测npm包是否需要更新")]),a._v(" "),t("div",{staticClass:"language-js extra-class"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 检测xx是否有最新版本")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 不加则检测当前package.json所有的包")]),a._v("\nncu xx\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 更新xx在package.json的版本号")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 不写则更新所有")]),a._v("\nncu "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v("u xx\n")])])]),t("h2",{attrs:{id:"lerna"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#lerna"}},[a._v("#")]),a._v(" lerna")]),a._v(" "),t("p",[a._v("包管理器")]),a._v(" "),t("div",{staticClass:"language-js extra-class"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 添加依赖库xx到yy,scope为作用范围，不设置则为整个环境 ")]),a._v("\nlerna add xx "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("--")]),a._v("scope"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("yy\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 安装依赖库(npm install)")]),a._v("\nlerna bootstrap\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 创建并初始化包文件夹xx")]),a._v("\nlerna create xx \n")])])])])}),[],!1,null,null,null);s.default=n.exports}}]);