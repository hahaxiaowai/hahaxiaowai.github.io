(window.webpackJsonp=window.webpackJsonp||[]).push([[39],{601:function(s,t,a){"use strict";a.r(t);var r=a(5),e=Object(r.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h2",{attrs:{id:"简述"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#简述"}},[s._v("#")]),s._v(" 简述")]),s._v(" "),a("p",[s._v("工作中遇到的很多小问题，解决了但是疏于整理，导致重复问题重复仍需百度搜索，特有此记录小问题。")]),s._v(" "),a("h2",{attrs:{id:"function"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#function"}},[s._v("#")]),s._v(" function")]),s._v(" "),a("h3",{attrs:{id:"split"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#split"}},[s._v("#")]),s._v(" split")]),s._v(" "),a("p",[s._v("不在自身操作")]),s._v(" "),a("h3",{attrs:{id:"reverse"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#reverse"}},[s._v("#")]),s._v(" reverse")]),s._v(" "),a("p",[s._v("在自身操作")]),s._v(" "),a("h3",{attrs:{id:"replace"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#replace"}},[s._v("#")]),s._v(" replace")]),s._v(" "),a("p",[s._v("替换不在自身操作，而是返回替换后的结果")]),s._v(" "),a("h3",{attrs:{id:"splice"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#splice"}},[s._v("#")]),s._v(" splice")]),s._v(" "),a("p",[s._v("删除数组某一元素:Array.splice(index,howmany) ,传索引和1,返回被删除的数组")]),s._v(" "),a("p",[s._v("添加:Array.splice(index,howmany,'…')")]),s._v(" "),a("p",[s._v("在自身操作")]),s._v(" "),a("h3",{attrs:{id:"object-assign-target-objects"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#object-assign-target-objects"}},[s._v("#")]),s._v(" Object.assign(target, ...objects)")]),s._v(" "),a("p",[s._v("将对象合并到target上")]),s._v(" "),a("h3",{attrs:{id:"uint8array-int8array"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#uint8array-int8array"}},[s._v("#")]),s._v(" Uint8Array int8Array")]),s._v(" "),a("p",[s._v("带U的均是无符号的，既取值范围只能是0以上")]),s._v(" "),a("h3",{attrs:{id:"promise-all"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#promise-all"}},[s._v("#")]),s._v(" promise.all")]),s._v(" "),a("p",[s._v("异步请求返回Promise\n假设有 a,b,c三个promise\nPromis.all([a,b,c]).then(() v=>{})")]),s._v(" "),a("h2",{attrs:{id:"question"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#question"}},[s._v("#")]),s._v(" question")]),s._v(" "),a("h3",{attrs:{id:"图片跨域"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#图片跨域"}},[s._v("#")]),s._v(" 图片跨域")]),s._v(" "),a("p",[s._v("静态资源的一个重要原因（80%）是一位服务器端未设置跨域的白名单，以至于造成跨域，还有另外一种便是客户端未设置跨域请求Access-Control-Allow-Origin，这两种情况十分好解决。")]),s._v(" "),a("p",[s._v("图片跨域问题我是在webgl请求资源时出现的，代码中实例化一个image对象，想要请求跨域的资源，image类同样能够设置一个跨域请求头：")]),s._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" img "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("image")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nimg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("src "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'xxx'")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//地址")]),s._v("\nimg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("crossOrigin "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'anonymous'")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 跨域设置")]),s._v("\n\n")])])]),a("p",[s._v("crossOrigin有两个可以设置的选项，use-credentials和anonymous，两者设置后都可以跨域，但前者可以带cookie，后者不可。")]),s._v(" "),a("h3",{attrs:{id:"package-json参数解析"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#package-json参数解析"}},[s._v("#")]),s._v(" package.json参数解析")]),s._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[s._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 为 true 时，不发布 npm 包。")]),s._v("\n "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"private"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 将会覆盖main字段的效果")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 如果写了import和require，表名用这两种方式引入时，引入指向的不同文件")]),s._v("\n "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"exports"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"."')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"import"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"./dist/es/index.js"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"require"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"./dist/js/index.js"')]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])])])}),[],!1,null,null,null);t.default=e.exports}}]);