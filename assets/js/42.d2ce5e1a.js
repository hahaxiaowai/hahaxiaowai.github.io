(window.webpackJsonp=window.webpackJsonp||[]).push([[42],{614:function(a,t,s){"use strict";s.r(t);var r=s(5),e=Object(r.a)({},(function(){var a=this,t=a.$createElement,s=a._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h2",{attrs:{id:"简述"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#简述"}},[a._v("#")]),a._v(" 简述")]),a._v(" "),s("p",[a._v("工作学习一段时间后，自己萌生了封装库的想法，于是便有了c-painter。\n这是一个简单的canvas画板，利用canvas 2d绘制api,封装了一个画板，支持导入导出等操作，目前仍在完善中。")]),a._v(" "),s("h2",{attrs:{id:"思路"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#思路"}},[a._v("#")]),a._v(" 思路")]),a._v(" "),s("p",[a._v("利用lerna进行库管理，封装成js库与组件库，实现更好的供给方案，即：使用组件库直接使用，不需要进行额外的开发，也可以根据js库自己封装组件，这种需求很常见，组件库的样式风格不符合系统的风格，UI重新设计样式，开发拿这组件源码进行改动，或是业务上有不一样的需求，利用js库进行再封装。")]),a._v(" "),s("h2",{attrs:{id:"c-painter"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#c-painter"}},[a._v("#")]),a._v(" c-painter")]),a._v(" "),s("p",[a._v("虽然是一次库封装的实践，但也希望这个库能够有人使用，这里做一下简单的功能介绍")]),a._v(" "),s("h3",{attrs:{id:"功能介绍"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#功能介绍"}},[a._v("#")]),a._v(" 功能介绍")]),a._v(" "),s("h3",{attrs:{id:"后续计划"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#后续计划"}},[a._v("#")]),a._v(" 后续计划")]),a._v(" "),s("h2",{attrs:{id:"js库封装"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#js库封装"}},[a._v("#")]),a._v(" js库封装")]),a._v(" "),s("h3",{attrs:{id:"库的结构"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#库的结构"}},[a._v("#")]),a._v(" 库的结构")]),a._v(" "),s("h3",{attrs:{id:"rollup打包"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#rollup打包"}},[a._v("#")]),a._v(" rollup打包")])])}),[],!1,null,null,null);t.default=e.exports}}]);