import{_ as a,c as s,a8 as e,o as t}from"./chunks/framework.CoTv16_l.js";const d=JSON.parse('{"title":"webgl向webgl2升级（cesium)","description":"","frontmatter":{"title":"webgl向webgl2升级（cesium)","date":"2024-8-8","categories":["webgl"],"tags":["基础"],"timeline":false,"publish":false},"headers":[],"relativePath":"blogs/GIS/webgl/webgl2.md","filePath":"blogs/GIS/webgl/webgl2.md","lastUpdated":1732694908000}'),l={name:"blogs/GIS/webgl/webgl2.md"};function n(r,i,h,p,o,k){return t(),s("div",null,i[0]||(i[0]=[e(`<h2 id="in-out-varying-attribute" tabindex="-1">in out varying attribute <a class="header-anchor" href="#in-out-varying-attribute" aria-label="Permalink to &quot;in out varying attribute&quot;">​</a></h2><p><a href="https://www.jianshu.com/p/cb9281eda4e4" target="_blank" rel="noreferrer">https://www.jianshu.com/p/cb9281eda4e4</a></p><ol><li>使用in代替attribute</li><li>顶点着色器中的varying变量用out声明，表示输出</li><li>在片元着色器中的varying变量用in声明，表示输入</li></ol><h2 id="gl-fragcolor" tabindex="-1">gl_FragColor <a class="header-anchor" href="#gl-fragcolor" aria-label="Permalink to &quot;gl_FragColor&quot;">​</a></h2><p>需自定义，且不能以<code>gl_</code>开头</p><div class="language-glsl vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">glsl</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">out</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> vec4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> fragColor;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> main</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">   fragColor </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> vec4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h2 id="texture2d、texturecube" tabindex="-1">texture2D、textureCube <a class="header-anchor" href="#texture2d、texturecube" aria-label="Permalink to &quot;texture2D、textureCube&quot;">​</a></h2><p>使用 <code>texture</code>替换</p>`,8)]))}const c=a(l,[["render",n]]);export{d as __pageData,c as default};
